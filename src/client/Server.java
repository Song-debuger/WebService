
package client;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.datatype.XMLGregorianCalendar;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 *
 */
@WebService(name = "server", targetNamespace = "http://server/")
@XmlSeeAlso({
        ObjectFactory.class
})
public interface Server {


    /**
     *
     * @param arg1
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "userRegister", targetNamespace = "http://server/", className = "client.UserRegister")
    @ResponseWrapper(localName = "userRegisterResponse", targetNamespace = "http://server/", className = "client.UserRegisterResponse")
    @Action(input = "http://server/server/userRegisterRequest", output = "http://server/server/userRegisterResponse")
    public String userRegister(
            @WebParam(name = "arg0", targetNamespace = "")
                    String arg0,
            @WebParam(name = "arg1", targetNamespace = "")
                    String arg1);

    /**
     *
     * @param arg3
     * @param arg2
     * @param arg4
     * @param arg1
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addList", targetNamespace = "http://server/", className = "client.AddList")
    @ResponseWrapper(localName = "addListResponse", targetNamespace = "http://server/", className = "client.AddListResponse")
    @Action(input = "http://server/server/addListRequest", output = "http://server/server/addListResponse")
    public String addList(
            @WebParam(name = "arg0", targetNamespace = "")
                    String arg0,
            @WebParam(name = "arg1", targetNamespace = "")
                    String arg1,
            @WebParam(name = "arg2", targetNamespace = "")
                    XMLGregorianCalendar arg2,
            @WebParam(name = "arg3", targetNamespace = "")
                    XMLGregorianCalendar arg3,
            @WebParam(name = "arg4", targetNamespace = "")
                    String arg4);

    /**
     *
     * @param arg0
     * @return
     *     returns java.lang.String
     * @throws ParseException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "service", targetNamespace = "http://server/", className = "client.Service")
    @ResponseWrapper(localName = "serviceResponse", targetNamespace = "http://server/", className = "client.ServiceResponse")
    @Action(input = "http://server/server/serviceRequest", output = "http://server/server/serviceResponse", fault = {
            @FaultAction(className = ParseException_Exception.class, value = "http://server/server/service/Fault/ParseException")
    })
    public String service(
            @WebParam(name = "arg0", targetNamespace = "")
                    String arg0)
            throws ParseException_Exception
    ;

    /**
     *
     * @param arg1
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "clearList", targetNamespace = "http://server/", className = "client.ClearList")
    @ResponseWrapper(localName = "clearListResponse", targetNamespace = "http://server/", className = "client.ClearListResponse")
    @Action(input = "http://server/server/clearListRequest", output = "http://server/server/clearListResponse")
    public String clearList(
            @WebParam(name = "arg0", targetNamespace = "")
                    String arg0,
            @WebParam(name = "arg1", targetNamespace = "")
                    String arg1);

    /**
     *
     * @param arg1
     * @param arg0
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "checkPassword", targetNamespace = "http://server/", className = "client.CheckPassword")
    @ResponseWrapper(localName = "checkPasswordResponse", targetNamespace = "http://server/", className = "client.CheckPasswordResponse")
    @Action(input = "http://server/server/checkPasswordRequest", output = "http://server/server/checkPasswordResponse")
    public int checkPassword(
            @WebParam(name = "arg0", targetNamespace = "")
                    String arg0,
            @WebParam(name = "arg1", targetNamespace = "")
                    String arg1);

    /**
     *
     * @param arg3
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "searchList", targetNamespace = "http://server/", className = "client.SearchList")
    @ResponseWrapper(localName = "searchListResponse", targetNamespace = "http://server/", className = "client.SearchListResponse")
    @Action(input = "http://server/server/searchListRequest", output = "http://server/server/searchListResponse")
    public String searchList(
            @WebParam(name = "arg0", targetNamespace = "")
                    String arg0,
            @WebParam(name = "arg1", targetNamespace = "")
                    String arg1,
            @WebParam(name = "arg2", targetNamespace = "")
                    XMLGregorianCalendar arg2,
            @WebParam(name = "arg3", targetNamespace = "")
                    XMLGregorianCalendar arg3);

    /**
     *
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "deleteList", targetNamespace = "http://server/", className = "client.DeleteList")
    @ResponseWrapper(localName = "deleteListResponse", targetNamespace = "http://server/", className = "client.DeleteListResponse")
    @Action(input = "http://server/server/deleteListRequest", output = "http://server/server/deleteListResponse")
    public String deleteList(
            @WebParam(name = "arg0", targetNamespace = "")
                    String arg0,
            @WebParam(name = "arg1", targetNamespace = "")
                    String arg1,
            @WebParam(name = "arg2", targetNamespace = "")
                    int arg2);

}
